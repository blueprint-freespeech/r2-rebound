list(APPEND CMAKE_MODULE_PATH ${CMAKE_CURRENT_LIST_DIR}/compiler/warnings)
function(setup_compiler_warnings target)
    option(WARNINGS_AS_ERRORS "Treat compiler warnings as errors" OFF)
    if(CMAKE_CXX_COMPILER_ID MATCHES ".*Clang")
        include(clang-warnings)
    elseif(CMAKE_CXX_COMPILER_ID STREQUAL "GNU")
        include(gcc-warnings)
    elseif(CMAKE_CXX_COMPILER_ID STREQUAL "MSVC")
        include(msvc-warnings)
    else()
        message(WARNING "No compiler specific warning settings detected for compiler ${CMAKE_CXX_COMPILER_ID}")
    endif()

    target_compile_options(${target} PRIVATE
        $<$<COMPILE_LANGUAGE:CXX>:${CXX_WARNINGS}>
        $<$<COMPILE_LANGUAGE:C>:${C_WARNINGS}>)
endfunction()

list(APPEND CMAKE_MODULE_PATH ${CMAKE_CURRENT_LIST_DIR}/compiler/san)
function(setup_compiler_sanitizers target)
    if(CMAKE_CXX_COMPILER_ID MATCHES ".*Clang")
        include(clang-san)
        clang_setup_sanitizers(${target})
    elseif(CMAKE_CXX_COMPILER_ID STREQUAL "GNU")
        include(gcc-san)
        gcc_setup_sanitizers(${target})
    elseif(CMAKE_CXX_COMPILER_ID STREQUAL "MSVC")
        include(msvc-san)
        msvc_setup_sanitizers(${target})
    else()
        message(WARNING "No compiler specific sanitizer settings detected for compiler ${CMAKE_CXX_COMPILER_ID}")
    endif()
endfunction()

function(setup_compiler target)
    setup_compiler_warnings(${target})
    setup_compiler_sanitizers(${target})
endfunction()
